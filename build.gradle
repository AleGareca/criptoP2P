plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.unq.desa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'
targetCompatibility = '18'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '2.0.0.RELEASE'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.2'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.11'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	implementation 'org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE'

}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/webservice/**',
										'**/common/**',
										'**/config/**',
										'**/persistence/**',
										'**/model/**'])
		}))
	}
	finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/webservice/**',
										'**/common/**',
										'**/config/**',
										'**/persistence/**',
										'**/model/**'])
		}))
	}
	violationRules {
		rule {
			enabled = true
			limit {
				minimum = 0.0
			}
		}
	}
}
test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
tasks.named('test') {
	useJUnitPlatform()
}
